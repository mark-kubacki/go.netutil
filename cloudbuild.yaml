timeout: 180s
options:
  env:
  - 'GO386=sse2' # Intel Edison
  - 'GOMODCACHE=/var/lib/go'
  - 'GOCACHE=/var/cache/go'
  volumes:
  - name: 'GOMODCACHE'
    path: '/var/lib/go'
  - name: 'GOCACHE'
    path: '/var/cache/go'
tags: ['golang']

steps:
- name: 'gcr.io/cloud-builders/docker'
  id: 'get golang'
  waitFor: ['-']
  entrypoint: 'bash'
  args:
  - -c
  - |
    set -ex
    if ! docker tag golang:cloudbuild_cache localhost/golang:latest; then
      docker pull mirror.gcr.io/library/golang:latest
      docker tag {mirror.gcr.io/library,localhost}/golang:latest
    fi

- name: 'localhost/golang'
  id: 'gofmt'
  waitFor: ['get golang']
  entrypoint: 'bash'
  args: ['-c', 'diff <(echo -n) <(gofmt -s -d $(find . -type f -name "*.go" -not -path "./_*"))']

- name: 'gcr.io/blitznote/golang/ineffassign'
  id: 'ineffassign'
  waitFor: ['gofmt']
  args: ['.']
- name: 'gcr.io/blitznote/golang/golint'
  id: 'lint'
  waitFor: ['gofmt']

- name: 'localhost/golang'
  id: 'pilot build, amd64'
  waitFor: ['ineffassign', 'lint']
  env: ['GOARCH=amd64']
  args: ['go', 'build', '.', 'errors']
- name: 'localhost/golang'
  id: 'pilot build, x86'
  waitFor: ['ineffassign', 'lint']
  env: ['GOARCH=386']
  args: ['go', 'build', '.', 'errors']

- name: 'localhost/golang'
  id: 'test, amd64'
  waitFor: ['pilot build, amd64']
  env: ['GOARCH=amd64']
  args: ['go', 'test', '-v']
- name: 'localhost/golang'
  id: 'test, x86'
  waitFor: ['pilot build, x86', 'test, amd64']
  env: ['GOARCH=386']
  args: ['go', 'test', '-v']

- name: 'localhost/golang'
  id: 'vet'
  waitFor: ['test, amd64', 'test, x86']
  args: ['go', 'vet', '.']
